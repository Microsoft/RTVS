<UserControl x:Class="Microsoft.R.Components.PackageManager.Implementation.View.PackageList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpf="clr-namespace:Microsoft.R.Wpf;assembly=Microsoft.R.Wpf"
             xmlns:components="clr-namespace:Microsoft.R.Components"
             xmlns:view="clr-namespace:Microsoft.R.Components.PackageManager.Implementation.View"
             xmlns:designTime="clr-namespace:Microsoft.R.Components.PackageManager.Implementation.View.DesignTime"
             xmlns:viewModel="clr-namespace:Microsoft.R.Components.PackageManager.ViewModel"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type=designTime:DesignTimeRPackageManagerViewModel, IsDesignTimeCreatable=True}"
             d:DesignHeight="250" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <view:PackageManagerResources />
            </ResourceDictionary.MergedDictionaries>

            <!-- style for install, uninstall and update buttons -->
            <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" RecognizesAccessKey="True"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonHoverActiveBorderKey}}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonDownKey}}" />
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static wpf:Brushes.ToolWindowButtonDownBorderKey}}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="PackageInfoTemplate" DataType="{x:Type viewModel:IRPackageViewModel}">
                <Border BorderThickness="0,0,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Background="Transparent" x:Name="Container">
                    <Grid Margin="16,8,7,8" MinHeight="32">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <!-- check box -->
                        <CheckBox Grid.Column="0" Margin="0,1,8,0" VerticalAlignment="Center" IsChecked="{Binding Path=IsSelected}"
                                  Visibility="{Binding Path=CheckBoxesEnabled, RelativeSource={RelativeSource AncestorType={x:Type view:PackageList}}, Converter={x:Static wpf:Converters.FalseIsCollapsed}}"/>

                        <!-- title & summary-->
                        <TextBlock Grid.Column="1" FontWeight="Bold" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=OneWay}"
                                   FontSize="{Binding ElementName=_self, Path=FontSize, Converter={x:Static wpf:Converters.FontScale122}}">
                            <TextBlock.ToolTip>
                                <TextBlock Style="{StaticResource TooltipStyle}" Visibility="{Binding Path=Title, Mode=OneWay, Converter={x:Static wpf:Converters.NullOrEmptyIsCollapsed}}">
                                    <Run Text="{Binding Path=Name, Mode=OneWay}" FontWeight="Bold" />
                                    <LineBreak />
                                    <Run Text="{Binding Path=Title, Mode=OneWay}" />
                                </TextBlock>
                            </TextBlock.ToolTip>
                        </TextBlock>

                        <Grid Grid.Column="2" VerticalAlignment="Center" Margin="10,0,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0" HorizontalAlignment="Right" Visibility="{Binding Path=IsInstalled, Converter={x:Static wpf:Converters.FalseIsCollapsed}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="auto" />
                                    <ColumnDefinition Width="auto" />
                                </Grid.ColumnDefinitions>

                                <!-- installed indicator -->
                                <Rectangle x:Name="_installedIndicator" Grid.Column="0" Width="12" Height="12" VerticalAlignment="Center"
                                           Fill="{StaticResource IconGrayInstalledIndicator}" />

                                <!-- installed version -->
                                <TextBlock x:Name="TextInstalledVersion" Grid.Column="1" Margin="4,0,4,0" VerticalAlignment="Center"
                                           Text="{Binding Path=InstalledVersion, StringFormat={}v{0}}"
                                           ToolTip="{Binding Path=InstalledVersion, StringFormat={x:Static components:Resources.PackageManager_InstalledVersionToolTip}}" />
                            </Grid>

                            <!-- version to install. It occupies the same position as the installed version -->
                            <TextBlock x:Name="_versionToInstall" Grid.Column="0" Margin="2,0,4,0" VerticalAlignment="Center" TextAlignment="Right"
                                       Text="{Binding Path=LatestVersion, StringFormat={}v{0}}"
                                       Visibility="{Binding Path=IsInstalled, Converter={x:Static wpf:Converters.TrueIsCollapsed}}"
                                       ToolTip="{Binding Path=LatestVersion, StringFormat={x:Static components:Resources.PackageManager_LatestVersionToolTip}}">
                            </TextBlock>

                            <!-- uninstall button -->
                            <Button x:Name="ButtonUninstall" Style="{StaticResource ButtonStyle}" Grid.Column="1" Click="ButtonUninstall_Click"
                                    Visibility="{Binding Path=IsInstalled, Converter={x:Static wpf:Converters.FalseIsCollapsed}}"
                                    ToolTip="{x:Static components:Resources.PackageManager_UninstallButtonToolTip}">
                                <Rectangle Fill="{StaticResource IconUninstall}" Width="16" Height="16" />
                            </Button>

                            <!-- install button -->
                            <Button x:Name="ButtonInstall" Grid.Column="1" Style="{StaticResource ButtonStyle}" Click="ButtonInstall_Click" 
                                    Visibility="{Binding Path=IsInstalled, Converter={x:Static wpf:Converters.TrueIsCollapsed}}">
                                <Button.ToolTip>
                                    <MultiBinding StringFormat="{x:Static components:Resources.PackageManager_InstallButtonToolTip}">
                                        <Binding Path="Name" />
                                        <Binding Path="LatestVersion" />
                                    </MultiBinding>
                                </Button.ToolTip>
                                <Rectangle Fill="{StaticResource IconInstall}" Width="16" Height="16" />
                            </Button>

                            <!-- version to update to -->
                            <TextBlock x:Name="TextVersionToUpdateTo" Grid.Column="2" Margin="2,0,4,0" VerticalAlignment="Center" TextAlignment="Right"
                                       Visibility="{Binding Path=IsUpdateAvailable, Mode=OneWay, Converter={x:Static wpf:Converters.FalseIsCollapsed}}"
                                       Text="{Binding Path=LatestVersion, StringFormat={}v{0}}">
                                <TextBlock.ToolTip>
                                    <Binding Path="LatestVersion" StringFormat="{x:Static components:Resources.PackageManager_LatestVersionToolTip}" />
                                </TextBlock.ToolTip>
                            </TextBlock>

                            <!-- update button -->
                            <Button x:Name="ButtonUpdate" Grid.Column="3" Style="{StaticResource ButtonStyle}" Click="ButtonUpdate_Click"
                                    Visibility="{Binding Path=IsUpdateAvailable, Mode=OneWay, Converter={x:Static wpf:Converters.FalseIsCollapsed}}">
                                <Button.ToolTip>
                                    <MultiBinding StringFormat="{x:Static components:Resources.PackageManager_UpdateButtonToolTip}">
                                        <Binding Path="Name" />
                                        <Binding Path="LatestVersion" />
                                    </MultiBinding>
                                </Button.ToolTip>
                                <Rectangle Fill="{StaticResource IconUpdateAvailableIndicator}" Width="16" Height="16" />
                            </Button>
                        </Grid>
                    </Grid>
                </Border>
            </DataTemplate>

            <!-- Template used by ListBoxItem that represents a package. -->
            <ControlTemplate x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
                <Border x:Name="Bd" BorderThickness="0" Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="true">
                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Border>
                <ControlTemplate.Triggers>
                    <!-- set the background for IsEnabled == false -->
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static wpf:Brushes.ListPaneBackground}}" />
                    </Trigger>

                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsMouseOver" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static wpf:Brushes.ContentMouseOverBrushKey}}" />
                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ContentMouseOverTextBrushKey}}" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Selector.IsSelectionActive" Value="False" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static wpf:Brushes.ContentInactiveSelectedBrushKey}}" />
                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource {x:Static wpf:Brushes.ContentInactiveSelectedTextBrushKey}}" />
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Selector.IsSelectionActive" Value="True" />
                            <Condition Property="IsSelected" Value="True" />
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static wpf:Brushes.ContentSelectedBrushKey}}" />
                        <Setter Property="TextBlock.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static wpf:Brushes.ContentSelectedTextBrushKey}}" />
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- the base style of the ListBoxItem. -->
            <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
                <Setter Property="Padding" Value="0" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            </Style>

            <!-- the style of the ListBoxItem when the item is a package. -->
            <Style x:Key="PackageItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyle}">
                <Setter Property="Template" Value="{StaticResource ListBoxItemTemplate}" />
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel LastChildFill="True">
        <Border x:Name="UpdateButtonContainer" DockPanel.Dock="Top" BorderThickness="0,0,0,1"
                BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"
                Background="{DynamicResource {x:Static wpf:Brushes.LegalMessageBackground}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="CheckBoxSelectAllPackages" Grid.Column="0" Margin="16, 8" VerticalAlignment="Center"
                          Checked="CheckBoxSelectAllPackages_Checked" Unchecked="CheckBoxSelectAllPackages_Unchecked"
                          Foreground="{DynamicResource {x:Static wpf:Brushes.UIText}}" Content="{x:Static components:Resources.PackageManager_SelectAllPackages}" />
                <Button x:Name="ButtonUpdate" Grid.Column="2" MinWidth="100" MinHeight="24" Margin="24,8" VerticalAlignment="Center"
                        Click="ButtonUpdate_Click" Content="{x:Static components:Resources.Update}" />
            </Grid>
        </Border>
        <Grid DockPanel.Dock="Bottom" Background="{DynamicResource {x:Static wpf:Brushes.ListPaneBackground}}">
            <Grid Height="22" VerticalAlignment="Top" Panel.ZIndex="1">
                <TextBlock HorizontalAlignment="Center" Text="{x:Static components:Resources.Ready}" Visibility="Collapsed" />
                <Grid HorizontalAlignment="Center" Height="22" Visibility="{Binding Path=IsLoading, Converter={x:Static wpf:Converters.FalseIsCollapsed}}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <view:Spinner Grid.Column="0" Width="16" Height="16" Margin="3" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    <TextBlock Grid.Column="1" Text="{x:Static components:Resources.Loading}" HorizontalAlignment="Left" VerticalAlignment="Center"
                               Foreground="{DynamicResource {x:Static wpf:Brushes.UIText}}"/>
                </Grid>
                <Grid.Visibility>
                    <MultiBinding Converter="{x:Static wpf:Converters.AnyIsNotCollapsed}">
                        <Binding Path="IsLoading" />
                    </MultiBinding>
                </Grid.Visibility>
            </Grid>
            <ListBox x:Name="List" Background="{DynamicResource {x:Static wpf:Brushes.ListPaneBackground}}" Foreground="{DynamicResource {x:Static wpf:Brushes.UIText}}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Visible" ItemContainerStyle="{DynamicResource PackageItemStyle}"
                     VirtualizingPanel.IsVirtualizing="true" VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.CacheLength="1,2" VirtualizingPanel.CacheLengthUnit="Page"
                     PreviewKeyUp="List_PreviewKeyUp" SelectionChanged="List_SelectionChanged" HorizontalContentAlignment="Stretch" BorderThickness="0,0,0,0" 
                     Visibility="{Binding Path=IsLoading, Converter={x:Static wpf:Converters.TrueIsCollapsed}}"
                     ItemsSource="{Binding Path=Items}" ItemTemplate="{StaticResource PackageInfoTemplate}">
                <!-- set the template to disable the background change when the IsEnabled is false. -->
                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </ListBox.Template>
            </ListBox>
        </Grid>

    </DockPanel>
</UserControl>
